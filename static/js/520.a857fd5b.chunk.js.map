{"version":3,"file":"static/js/520.a857fd5b.chunk.js","mappings":"+NAEaA,EAAUC,EAAAA,GAAAA,IAAH,6VCAPC,EAAmBD,EAAAA,GAAAA,GAAH,yCAIhBE,EAAuBF,EAAAA,GAAAA,GAAH,sRCapBG,GDAuBH,EAAAA,GAAAA,EAAH,wCCjBDA,EAAAA,GAAAA,GAAH,yCAIOA,EAAAA,GAAAA,GAAH,sRAaGA,EAAAA,GAAAA,EAAH,yC,iDCYjC,EAxBsB,SAAC,GAA0B,IAAxBI,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC3BC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,iCACE,SAAC,EAAD,UAAuBH,EAAO,KAAOC,KACrC,SAACG,EAAA,EAAD,CACEC,QAAQ,YACRC,WAAW,SAACC,EAAA,EAAD,IACXC,QAAS,kBARU,SAAAT,GAAE,OAAIG,EAASO,EAAAA,GAAAA,cAAiCV,IAQpDW,CAAiBX,IAHlC,wB,oBCoBN,EA3BqB,WACnB,IAAMG,GAAWC,EAAAA,EAAAA,MACXQ,GAAoBC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,aACtCC,EAAAA,EAAAA,YAAU,kBAAMZ,EAASO,EAAAA,GAAAA,mBAAqC,CAACP,IAC/D,IAAMa,GAAWH,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,oBAE7B,GAAKE,EAIL,OACE,8BACGJ,GACC,SAACK,EAAA,EAAD,KAEA,SAACpB,EAAD,UACGmB,EAASE,KAAI,gBAAGlB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,SAACJ,EAAD,WACE,SAAC,EAAD,CAAeE,GAAIA,EAAIC,KAAMA,EAAMC,OAAQA,KADlBF,W,UCFvC,EAlBuB,WACrB,IAAMG,GAAWC,EAAAA,EAAAA,MAKjB,OACE,SAACe,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTrB,KAAK,cACLsB,MAAM,wBACNC,SAXa,SAAAC,GACftB,GAASuB,EAAAA,EAAAA,IAAaD,EAAEE,cAAcC,Y,iDCWpCC,EAAmBC,EAAAA,GAAW,CAClC7B,KAAM6B,EAAAA,KAEHT,WACAU,QACC,yHACA,0IAEJ7B,OAAQ4B,EAAAA,KAELT,WACAU,QACC,6EACA,kGAyFN,EAlFa,WAEX,IAAM5B,GAAWC,EAAAA,EAAAA,MAEXY,GAAWH,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,oBAIrBkB,EAAU,mCAAG,WAAMC,GAAN,iEACjBvB,EAAAA,GAAAA,WAA8BuB,GADb,2CAAH,sDAGZC,GAASC,EAAAA,EAAAA,IAAU,CAEvBC,cAAe,CACbnC,KAAM,GACNC,OAAQ,IAGV2B,iBAAkBA,EAClBQ,SAAU,SAACT,EAAD,GAA2B,IAbjBK,EAaAK,EAAgB,EAAhBA,UAbAL,EAeFL,EAdlBzB,EAASO,EAAAA,GAAAA,WAA8BuB,KAkBhB,IAHDjB,EAASuB,WACzB,SAAAC,GAAO,OAAIA,EAAQvC,OAAS2B,EAAM3B,SAGlC+B,EAAWJ,GACXzB,GAASuB,EAAAA,EAAAA,IAAa,MAEtBe,MAAMb,EAAM3B,KAAO,2BAErBqC,OAON,GAAKtB,EAOL,OACE,0BACE,kBAAMqB,SAAUH,EAAOQ,aAAvB,WAEE,SAACvB,EAAA,EAAD,CACEG,WAAS,EACTtB,GAAG,OACHC,KAAK,OACLsB,MAAM,OACNK,MAAOM,EAAOD,OAAOhC,KACrBuB,SAAUU,EAAOS,aACjBC,MAAOV,EAAOW,QAAQ5C,MAAQ6C,QAAQZ,EAAOa,OAAO9C,MACpD+C,WAAYd,EAAOW,QAAQ5C,MAAQiC,EAAOa,OAAO9C,KACjDgD,GAAI,CAAEC,GAAI,MAGZ,SAAC/B,EAAA,EAAD,CACEG,WAAS,EACTtB,GAAG,SACHC,KAAK,SACLsB,MAAM,SACNK,MAAOM,EAAOD,OAAO/B,OACrBsB,SAAUU,EAAOS,aACjBC,MAAOV,EAAOW,QAAQ3C,QAAU4C,QAAQZ,EAAOa,OAAO7C,QACtD8C,WAAYd,EAAOW,QAAQ3C,QAAUgC,EAAOa,OAAO7C,OACnD+C,GAAI,CAAEC,GAAI,MAGZ,SAAC7C,EAAA,EAAD,CAAQ8C,MAAM,UAAU7C,QAAQ,YAAYgB,WAAS,EAAC8B,KAAK,SAA3D,+B,UC1FR,MAfA,WACE,OACE,+BACE,UAACzD,EAAD,YACE,uCACA,SAAC0D,EAAD,KACA,sCACA,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAACC,EAAA,EAAD,CAAWL,GAAI,CAAEM,GAAI,EAAGL,GAAI","sources":["pages/Contacts/Contacts.styled.jsx","components/ContactsView/ContactsView.styled.jsx","components/ContactsItems/ContactsItems.styled.jsx","components/ContactsItems/ContactsItems.jsx","components/ContactsView/ContactsView.jsx","components/ContactsFilter/ContactsFilter.jsx","components/ContactForm/ContactForm.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 15px;\n  background: #ffffff;\n  box-shadow: 0px 8px 12px rgba(0, 0, 0, 0.88);\n  border-radius: 16px;\n  margin: 20px auto;\n  width: 450px;\n  background: linear-gradient(\n    180deg,\n    rgba(169, 198, 217, 1) 15%,\n    rgba(242, 167, 75, 1) 90%\n  );\n  boxshadow: 0.2px 12px 18px rgba(131, 153, 167, 0.6);\n`;\n","import styled from 'styled-components';\n\nexport const ContactsViewList = styled.ul`\n  padding: 0px;\n`;\n\nexport const ContactsViewListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n  border-top: 1px solid black;\n  border-right: 1px solid black;\n  border-left: 1px solid black;\n  &:last-child {\n    border-bottom: 1px solid black;\n  }\n`;\n\nexport const ContactsViewListText = styled.p`\n  margin: 0px;\n`;\n","import styled from 'styled-components';\n\nexport const ContactsViewList = styled.ul`\n  padding: 0px;\n`;\n\nexport const ContactsViewListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n  border-top: 1px solid black;\n  border-right: 1px solid black;\n  border-left: 1px solid black;\n  &:last-child {\n    border-bottom: 1px solid black;\n  }\n`;\n\nexport const ContactsViewListText = styled.p`\n  margin: 0px;\n`;\n","import PropTypes from 'prop-types';\nimport { ContactsViewListText } from './ContactsItems.styled';\nimport { contactsOperations } from 'redux/contacts';\nimport { useDispatch } from 'react-redux';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Button from '@mui/material/Button';\n\nconst ContactsItems = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const onDeleteContacts = id => dispatch(contactsOperations.deleteContact(id));\n\n  return (\n    <>\n      <ContactsViewListText>{name + ': ' + number}</ContactsViewListText>\n      <Button\n        variant=\"contained\"\n        startIcon={<DeleteIcon />}\n        onClick={() => onDeleteContacts(id)}\n      >\n        Delete\n      </Button>\n    </>\n  );\n};\n\nContactsItems.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactsItems;\n","import { ContactsViewList, ContactsViewListItem } from './ContactsView.styled';\nimport ContactsItems from 'components/ContactsItems';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport { useEffect } from 'react';\nimport Loader from 'components/Loader';\n\nconst ContactsView = () => {\n  const dispatch = useDispatch();\n  const isLoadingСontacts = useSelector(contactsSelectors.getLoading);\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n\n  if (!contacts) {\n    return;\n  }\n\n  return (\n    <>\n      {isLoadingСontacts ? (\n        <Loader />\n      ) : (\n        <ContactsViewList>\n          {contacts.map(({ id, name, number }) => (\n            <ContactsViewListItem key={id}>\n              <ContactsItems id={id} name={name} number={number} />\n            </ContactsViewListItem>\n          ))}\n        </ContactsViewList>\n      )}\n    </>\n  );\n};\n\nexport default ContactsView;\n","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts';\nimport TextField from '@mui/material/TextField';\n\nconst ContactsFilter = () => {\n  const dispatch = useDispatch();\n  const onChange = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n\n  return (\n    <TextField\n      margin=\"normal\"\n      required\n      fullWidth\n      name=\"findContact\"\n      label=\"Find contacts by name\"\n      onChange={onChange}\n    />\n  );\n};\n\nexport default ContactsFilter;\n","import React from 'react';\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts';\n\nimport {\n\n  TextField,\n  Button\n  \n} from \"@mui/material\";\n\n\n\nconst validationSchema = yup.object({\n  name: yup\n    .string()\n    .required()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  number: yup\n    .string()\n    .required()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n\n\n\n  \nconst Form = () => {\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n\n  const onAddContacts = values =>\n    dispatch(contactsOperations.addContact(values));\n    const addContact = async values => {\n      contactsOperations.addContact(values);\n    };\n  const formik = useFormik({\n    \n    initialValues: {\n      name: '',\n      number: '',\n    },\n\n    validationSchema: validationSchema,\n    onSubmit: (value, { resetForm }) => {\n        // alert(JSON.stringify(values, null, 2));\n        onAddContacts(value);\n        const indexName = contacts.findIndex(\n          contact => contact.name === value.name\n        );\n        if (indexName === -1) {\n          addContact(value);\n          dispatch(changeFilter(''));\n        } else {\n          alert(value.name + ' is already in contacts');\n        }\n        resetForm();     \n\n    }\n\n  });\n\n  \n  if (!contacts) {\n    return;\n  }\n\n\n\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n\n        <TextField\n          fullWidth\n          id=\"name\"\n          name=\"name\"\n          label=\"Name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n          sx={{ mb: 5 }}\n \n          />\n        <TextField\n          fullWidth\n          id=\"number\"\n          name=\"number\"\n          label=\"Number\"\n          value={formik.values.number}\n          onChange={formik.handleChange}\n          error={formik.touched.number && Boolean(formik.errors.number)}\n          helperText={formik.touched.number && formik.errors.number}\n          sx={{ mb: 5 }}\n          />\n\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n        Add contact\n        </Button>\n\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import { Wrapper } from './Contacts.styled';\nimport ContactsView from 'components/ContactsView';\nimport ContactsFilter from 'components/ContactsFilter';\nimport ContactForm from 'components/ContactForm';\nimport Copyright from 'components/Copyright';\n\nfunction Contacts() {\n  return (\n    <>\n      <Wrapper>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <ContactsFilter />\n        <ContactsView />\n        <Copyright sx={{ mt: 8, mb: 4 }} />\n      </Wrapper>\n    </>\n  );\n}\n\nexport default Contacts;\n"],"names":["Wrapper","styled","ContactsViewList","ContactsViewListItem","ContactsViewListText","id","name","number","dispatch","useDispatch","Button","variant","startIcon","Delete","onClick","contactsOperations","onDeleteContacts","isLoadingСontacts","useSelector","contactsSelectors","useEffect","contacts","Loader","map","TextField","margin","required","fullWidth","label","onChange","e","changeFilter","currentTarget","value","validationSchema","yup","matches","addContact","values","formik","useFormik","initialValues","onSubmit","resetForm","findIndex","contact","alert","handleSubmit","handleChange","error","touched","Boolean","errors","helperText","sx","mb","color","type","ContactForm","Copyright","mt"],"sourceRoot":""}